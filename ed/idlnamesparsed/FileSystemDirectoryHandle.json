{
  "name": "FileSystemDirectoryHandle",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "File System Standard",
      "url": "https://fs.spec.whatwg.org/"
    },
    "fragment": "[Exposed=(Window,Worker), SecureContext, Serializable]\ninterface FileSystemDirectoryHandle : FileSystemHandle {\n  async iterable<USVString, FileSystemHandle>;\n\n  Promise<FileSystemFileHandle> getFileHandle(USVString name, optional FileSystemGetFileOptions options = {});\n  Promise<FileSystemDirectoryHandle> getDirectoryHandle(USVString name, optional FileSystemGetDirectoryOptions options = {});\n\n  Promise<undefined> removeEntry(USVString name, optional FileSystemRemoveOptions options = {});\n\n  Promise<sequence<USVString>?> resolve(FileSystemHandle possibleDescendant);\n};",
    "href": "https://fs.spec.whatwg.org/#filesystemdirectoryhandle"
  },
  "extended": [],
  "inheritance": {
    "name": "FileSystemHandle",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "File System Standard",
        "url": "https://fs.spec.whatwg.org/"
      },
      "fragment": "[Exposed=(Window,Worker), SecureContext, Serializable]\ninterface FileSystemHandle {\n  readonly attribute FileSystemHandleKind kind;\n  readonly attribute USVString name;\n\n  Promise<boolean> isSameEntry(FileSystemHandle other);\n};",
      "href": "https://fs.spec.whatwg.org/#filesystemhandle"
    },
    "extended": [
      {
        "spec": {
          "title": "File System Access",
          "url": "https://wicg.github.io/file-system-access/"
        },
        "fragment": "[Exposed=(Window,Worker), SecureContext, Serializable]\npartial interface FileSystemHandle {\n  Promise<PermissionState> queryPermission(optional FileSystemHandlePermissionDescriptor descriptor = {});\n  Promise<PermissionState> requestPermission(optional FileSystemHandlePermissionDescriptor descriptor = {});\n};"
      }
    ],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}