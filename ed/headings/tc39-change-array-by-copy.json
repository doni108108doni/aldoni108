{
  "spec": {
    "title": "Change Array by copy",
    "url": "https://tc39.es/proposal-change-array-by-copy/"
  },
  "headings": [
    {
      "id": "sec-indexed-collections",
      "title": "Indexed Collections",
      "level": 1,
      "number": "1"
    },
    {
      "id": "sec-array-objects",
      "title": "Array Objects",
      "level": 2,
      "number": "1.1"
    },
    {
      "id": "sec-properties-of-the-array-prototype-object",
      "title": "Properties of the Array Prototype Object",
      "level": 3,
      "number": "1.1.1"
    },
    {
      "id": "sec-array.prototype.sort",
      "title": "Array.prototype.sort ( comparefn )",
      "level": 4,
      "number": "1.1.1.1"
    },
    {
      "id": "sec-comparearrayelements",
      "title": "CompareArrayElements ( x, y, comparefn )",
      "level": 4,
      "number": "1.1.1.2"
    },
    {
      "id": "sec-sortindexedproperties",
      "title": "SortIndexedProperties ( obj, len, SortCompare, skipHoles )",
      "level": 4,
      "number": "1.1.1.3"
    },
    {
      "id": "sec-array.prototype.toReversed",
      "title": "Array.prototype.toReversed ( )",
      "level": 4,
      "number": "1.1.1.4"
    },
    {
      "id": "sec-array.prototype.toSorted",
      "title": "Array.prototype.toSorted ( comparefn )",
      "level": 4,
      "number": "1.1.1.5"
    },
    {
      "id": "sec-array.prototype.toSpliced",
      "title": "Array.prototype.toSpliced ( start, deleteCount, ...items )",
      "level": 4,
      "number": "1.1.1.6"
    },
    {
      "id": "sec-array.prototype.with",
      "title": "Array.prototype.with ( index, value )",
      "level": 4,
      "number": "1.1.1.7"
    },
    {
      "id": "sec-array.prototype-@@unscopables",
      "title": "Array.prototype [ @@unscopables ]",
      "level": 4,
      "number": "1.1.1.8"
    },
    {
      "id": "sec-typedarray-objects",
      "title": "TypedArray Objects",
      "level": 2,
      "number": "1.2"
    },
    {
      "id": "sec-abstract-operations-for-typedarray-objects",
      "title": "Abstract Operations for TypedArray Objects",
      "level": 3,
      "number": "1.2.1"
    },
    {
      "id": "typedarray-create-same-type",
      "title": "TypedArrayCreateSameType ( exemplar, argumentList )",
      "level": 4,
      "number": "1.2.1.1"
    },
    {
      "id": "sec-%typedarray%-intrinsic-object",
      "title": "The %TypedArray% Intrinsic Object",
      "level": 3,
      "number": "1.2.2"
    },
    {
      "id": "sec-properties-of-the-%typedarrayprototype%-object",
      "title": "Properties of the %TypedArray% Prototype Object",
      "level": 4,
      "number": "1.2.2.1"
    },
    {
      "id": "sec-%typedarray%.prototype.sort",
      "title": "%TypedArray%.prototype.sort ( comparefn )",
      "level": 5,
      "number": "1.2.2.1.1"
    },
    {
      "id": "sec-comparetypedarrayelements",
      "title": "CompareTypedArrayElements ( x, y, comparefn, buffer )",
      "level": 5,
      "number": "1.2.2.1.2"
    },
    {
      "id": "sec-%typedarray%.prototype.toReversed",
      "title": "%TypedArray%.prototype.toReversed ( )",
      "level": 5,
      "number": "1.2.2.1.3"
    },
    {
      "id": "sec-%typedarray%.prototype.toSorted",
      "title": "%TypedArray%.prototype.toSorted ( comparefn )",
      "level": 5,
      "number": "1.2.2.1.4"
    },
    {
      "id": "sec-%typedarray%.prototype.with",
      "title": "%TypedArray%.prototype.with ( index, value )",
      "level": 5,
      "number": "1.2.2.1.5"
    }
  ]
}